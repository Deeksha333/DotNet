.Net Core can easily run in a docker container. Container provides a lightweighted and portable way to isolate your application  from the rest of the host system

Docker provide the ability to package and run the application in a container.isolation and security allow you to run containers simultaneously.

Container are lightweighted and contain everything to run an application.


Develop your application and its supporting components using containers.
The container becomes the unit for distributing and testing your application.


Your developers write code locally and share their work with their colleagues using Docker containers.
They use Docker to push their applications into a test environment and execute automated and manual tests.
When developers find bugs, they can fix them in the development environment and redeploy them to the test environment for testing and validation.
When testing is complete, getting the fix to the customer is as simple as pushing the updated image to the production environment.

--------------------*Docker Architecture:*------------------------

Docker uses a client-server architecture. The Docker client talks to the Docker daemon, which does the heavy lifting of building, running, 
and distributing your Docker containers. The Docker client and daemon can run on the same system, 
or you can connect a Docker client to a remote Docker daemon. 
The Docker client and daemon communicate using a REST API, over UNIX sockets or a network interface

Docker Daemon(dockerd):
It listen to the docker apis request like (docker pull, docker run)and it manage docker objects, images ,containers, networks and volumes . a daemon can communicate to another daemon to manage docker service


Docker Client(docker):
This is the primary way by which many docker users intract with docker. docker command uses docker api. docker client can communicate with more then one daemon.


Docker Registries:
Docker registry stores docker images. Docker hub is a public registry that anyone can use.
when you use docker run or docker pull command then required images pulled from your registry and push command to push required iamges on registry.

-----------------------------------------------------------------------------------------------------------------------------------------------


---------------------------*Docker Objects*------------------------
Images:
as image is a readonly template with instruction for creating docker container.
you can create your own image as well. to create own image frist you create a docker file. each instruction in docker file create a layer in the image.
when you change in the docker file and rebuild the image then only those layer which have changed rebuilt.


Container:

Container is a runnable instance of an image.you create , start,move or delete a container using docker or cli. you can connect a container to one or more network
attach storage to it or you can create a new image based on their current state.A container is defined by its image as well as any configuration options you provide to it when you create or start it. When a container is removed, 
any changes to its state that are not stored in persistent storage disappear.




Download docker from

https://www.docker.com/products/docker-desktop/


 